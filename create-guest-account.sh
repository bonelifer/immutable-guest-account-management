#!/bin/bash
################################################################################
# Script Name: create-guest-account.sh
# Description: Automates the creation of a guest account with overlay filesystem
#              using settings and configurations inherited from the 'guest-template'
#              account. This script utilizes the SquashFS generated by 
#              'update-guest-squashfs.sh' for setting up 'guestacc'.
#
# Usage: sudo bash create-guest-account.sh
#        (Ensure to run with appropriate permissions)
################################################################################

check_sudo() {
    if [[ $EUID -ne 0 ]]; then
        echo "Please run this script with sudo or as root."
        exit 1
    fi
}

set_guest_password() {
    GUEST_PASSWORD="YourHardcodedPasswordHere"  # Change this to your desired password
    
    echo -e "$GUEST_PASSWORD\n$GUEST_PASSWORD" | passwd guestacc
}

create_guest_account() {
    GUEST_ACCOUNT="guestacc"

    if ! id "$GUEST_ACCOUNT" &>/dev/null; then
        useradd -m -s /bin/bash -G users "$GUEST_ACCOUNT"
    fi
}

set_xdg_runtime_dir() {
    GUEST_ACCOUNT="guestacc"
    XDG_RUNTIME_DIR=$(getent passwd "$GUEST_ACCOUNT" | cut -d: -f6)/$(basename $(ls -td -- /run/user/*/"$GUEST_ACCOUNT" 2>/dev/null | head -n 1))
    usermod -d "$XDG_RUNTIME_DIR" -m "$GUEST_ACCOUNT"
}

create_guest_directories() {
    GUEST_OVERLAY_DIR="$XDG_RUNTIME_DIR/home-overlay"
    GUEST_ACCOUNT_DIR="$GUEST_OVERLAY_DIR/basedir"
    GUEST_WORK_DIR="$GUEST_OVERLAY_DIR/workdir"
    GUEST_UPPER_DIR="$GUEST_OVERLAY_DIR/overlaydir"

    mkdir -p "$GUEST_OVERLAY_DIR" "$GUEST_ACCOUNT_DIR" "$GUEST_WORK_DIR" "$GUEST_UPPER_DIR"
    chown -R "$GUEST_ACCOUNT":"$GUEST_ACCOUNT" "$GUEST_OVERLAY_DIR"
    chmod -R go-rwx "$GUEST_OVERLAY_DIR"
}

update_pam_configuration() {
    PAM_CONF_FILE="/etc/pam.d/guesthome"
    SCRIPT_PATH="/usr/local/bin/prepare-home-overlay"

    cat << EOF > "$PAM_CONF_FILE"
#%PAM-1.0

auth      optional                   pam_exec.so seteuid $SCRIPT_PATH
auth      optional                   pam_mount.so
password  optional                   pam_exec.so seteuid $SCRIPT_PATH
password  optional                   pam_mount.so
session   optional                   pam_exec.so seteuid $SCRIPT_PATH
session   optional                   pam_mount.so
EOF

    chmod +x "$SCRIPT_PATH"
}

post_account_setup() {
    set_guest_password
    echo "The guest account has been successfully set up."
    echo "Perform additional actions or configurations here."
    echo "This is just a placeholder for further script content."
}

# Call the functions
check_sudo
create_guest_account
set_xdg_runtime_dir
create_guest_directories
update_pam_configuration
post_account_setup

# Rest of the script content...

