#!/bin/bash
################################################################################
# Script Name: create-guest-account-alternative.sh
# Description: Automates the setup of a guest account with overlay filesystem. 
#              Alternative version using a direct approach without relying on
#              'pam_mount'. This script includes the creation of 'guestacc' and
#              sets up its directories and configurations based on settings 
#              inherited from the 'guest-template' account. Utilizes the SquashFS 
#              generated by 'update-guest-squashfs.sh'.
#
# Usage: sudo bash create-guest-account-alternative.sh
#        (Ensure to run with appropriate permissions)
################################################################################

check_sudo() {
    if [[ $EUID -ne 0 ]]; then
        echo "Please run this script with sudo or as root."
        exit 1
    fi
}

create_guest_account() {
    GUEST_ACCOUNT="guestacc"

    # Create the guest account if it doesn't exist
    if ! id "$GUEST_ACCOUNT" &>/dev/null; then
        useradd -m -s /bin/bash -G users "$GUEST_ACCOUNT"
        chown -R "$GUEST_ACCOUNT:$GUEST_ACCOUNT" "/home/$GUEST_ACCOUNT"
        chmod -R go-rwx "/home/$GUEST_ACCOUNT"

        XDG_RUNTIME_DIR=$(getent passwd "$GUEST_ACCOUNT" | cut -d: -f6)/$(basename $(ls -td -- /run/user/*/"$GUEST_ACCOUNT" 2>/dev/null | head -n 1))

        mkdir -p "$XDG_RUNTIME_DIR/home-overlay/basedir"
        mkdir -p "$XDG_RUNTIME_DIR/home-overlay/workdir"
        mkdir -p "$XDG_RUNTIME_DIR/home-overlay/overlaydir"

        chown -R "$GUEST_ACCOUNT:$GUEST_ACCOUNT" "$XDG_RUNTIME_DIR/home-overlay"
        chmod -R go-rwx "$XDG_RUNTIME_DIR/home-overlay"

        PAM_CONF_FILE="/etc/pam.d/guesthome"
        SCRIPT_PATH="/usr/local/bin/prepare-home-overlay"

        cat << EOF > "$PAM_CONF_FILE"
#%PAM-1.0

auth      optional                   pam_exec.so seteuid $SCRIPT_PATH
auth      optional                   pam_mount.so
password  optional                   pam_exec.so seteuid $SCRIPT_PATH
password  optional                   pam_mount.so
session   optional                   pam_exec.so seteuid $SCRIPT_PATH
session   optional                   pam_mount.so
EOF

        chmod +x "$SCRIPT_PATH"
    fi
}

set_guest_password() {
    GUEST_PASSWORD="YourHardcodedPasswordHere"  # Change this to your desired password
    
    echo -e "$GUEST_PASSWORD\n$GUEST_PASSWORD" | passwd guestacc
}

# Call the function to check for sudo
check_sudo

# Create the guest account
create_guest_account
set_guest_password
